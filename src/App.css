@tailwind base;
@tailwind components;
@tailwind utilities;

.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* chatbot start */
/* Chatbot Button Style */
.chatbot-button {
  position: fixed;
  bottom: 20px;
  right: 20px;
  padding: 10px 20px;
  background-color: #ae00ff;
  color: white;
  border: none;
  border-radius: 30px;
  cursor: pointer;
  z-index: 1000; /* Ensure the button is on top of other content */
}

/* Chatbot Component Style */
.chatbot {
  position: fixed;
  bottom: 80px; /* Adjust as needed to be above the button */
  right: 20px;
  width: 300px;
  height: 400px;
  max-height: 80vh; /* Ensure it fits well on the screen */
  background-color: white;
  border: 1px solid #ddd;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  display: flex;
  flex-direction: column;
  z-index: 1000; /* Ensure it stays above other elements */
}

/* chatbot end */

/* Button start */
@property --hue {
  syntax: "<angle>";
  inherits: false;
  initial-value: 248deg;
}

@property --rotate-1 {
  syntax: "<angle>";
  inherits: false;
  initial-value: 45deg;
}

@property --rotate-2 {
  syntax: "<angle>";
  inherits: false;
  initial-value: 150deg;
}

@property --rotate-offset-1 {
  syntax: "<angle>";
  inherits: false;
  initial-value: 95deg;
}

@property --rotate-offset-2 {
  syntax: "<angle>";
  inherits: false;
  initial-value: 75deg;
}

.btn::after {
  transition: --rotate-offset-1 0.5s, --rotate-offset-2 0.5s, --rotate-1 0.5s,
    --rotate-2 0.5s, --hue 0.5s;
  background: conic-gradient(
      at 50% 0%,
      transparent,
      calc(var(--rotate-offset-1)),
      hsla(var(--hue), 50%, 32%, 0.9) calc(var(--rotate-offset-1)),
      hsla(var(--hue), 50%, 32%, 0.9)
        calc(var(--rotate-offset-1) + var(--rotate-1)),
      transparent calc(var(--rotate-offset-1) + var(--rotate-1))
    ),
    conic-gradient(
      at 50% 0%,
      transparent,
      calc(var(--rotate-offset-2)),
      hsla(var(--hue), 50%, 44%, 1) calc(var(--rotate-offset-2)),
      hsla(var(--hue), 50%, 44%, 1)
        calc(var(--rotate-offset-2) + var(--rotate-2)),
      transparent calc(var(--rotate-offset-2) + var(--rotate-2))
    ),
    linear-gradient(
      hsla(var(--hue), 50%, 50%, 1),
      hsla(var(--hue), 50%, 50%, 1)
    );
}

/* modify values below to affect conic size with hover*/
.btn:hover::after {
  /* start angle */
  --rotate-offset-1: 140deg;
  --rotate-offset-2: 110deg;
  /* angle increase from start angle */
  --rotate-1: 110deg;
  --rotate-2: 160deg;

  --hue: 220deg;
}
/* Button end*/
/* styles.css */
/* Custom scrollbar styling */
.custom-scrollbar::-webkit-scrollbar {
  width: 5px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: #1a1a1a; /* Track color, matching navigation background */
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: #555; /* Thumb color */
  border-radius: 10px;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: #888; /* Thumb color on hover */
}

/*  */
ol, ul, menu {
  list-style: unset !important
}
/*  */